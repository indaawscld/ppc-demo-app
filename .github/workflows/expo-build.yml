name: Expo EAS CI/CD Pipeline

on:
  push:
    branches:
      - main  # You can change this to 'master' or any branch

jobs:
  qa-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Set Expo Token
        run: echo "EXPO_TOKEN=${{ secrets.EXPO_TOKEN }}" >> $GITHUB_ENV

      - name: Build Android APK (QA Preview)
        run: eas build --platform android --profile preview --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build iOS IPA (QA Preview)
        run: eas build --platform ios --profile preview --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        continue-on-error: true

  production-build:
    runs-on: ubuntu-latest
    needs: qa-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Set Expo Token
        run: echo "EXPO_TOKEN=${{ secrets.EXPO_TOKEN }}" >> $GITHUB_ENV

      - name: Build Android AAB (Production)
        run: eas build --platform android --profile production --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build iOS IPA (Production)
        run: eas build --platform ios --profile production --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        continue-on-error: true

  submit:
    runs-on: ubuntu-latest
    needs: production-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Submit Android AAB to Google Play
        run: eas submit --platform android --profile production --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Submit iOS IPA to App Store
        run: eas submit --platform ios --profile production --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        continue-on-error: true

  dependabot:
    runs-on: ubuntu-latest
    needs: submit

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Notify or Update Dependencies
        run: echo "Dependabot (or final job) ran successfully."

  slack-notification:
    runs-on: ubuntu-latest
    needs: dependabot
    if: success() # Only send Slack message if the pipeline was successful
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version numbers
        id: extract_version
        run: |
          VERSION_ANDROID=$(jq -r '.expo.android.versionCode' app.json)
          VERSION_IOS=$(jq -r '.expo.ios.buildNumber' app.json)
          echo "VERSION_ANDROID=${VERSION_ANDROID}" >> $GITHUB_ENV
          echo "VERSION_IOS=${VERSION_IOS}" >> $GITHUB_ENV

      - name: Get completed issues/tickets
        id: get_issues
        run: |
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository }}/issues?state=closed&milestone=1" \
          -o issues.json

      - name: Generate release notes
        id: generate_release_notes
        run: |
          RELEASE_NOTES=$(jq -r '.[] | "- \(.title) (\(.html_url))" ' issues.json | tr '\n' ' ')
          echo "RELEASE_NOTES=${RELEASE_NOTES}" >> $GITHUB_ENV

      - name: Send Release Notes to Slack
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{
            "text": "Release Notes for version *${{ env.VERSION_ANDROID }}* (Android) / *${{ env.VERSION_IOS }}* (iOS):\n\n${{ env.RELEASE_NOTES }}\n\nðŸš€ *Release Complete!*"
          }' ${{ secrets.SLACK_WEBHOOK_URL }}
