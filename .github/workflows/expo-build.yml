name: Expo EAS CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      run_qa_build:
        description: 'âœ… Run QA Build?'
        required: true
        default: 'true'
        type: boolean
      approve_production_build:
        description: 'ðŸ›‘ Approve Production Build (after QA)?'
        required: true
        default: 'false'
        type: boolean
      run_production_build:
        description: 'âœ… Run Production Build?'
        required: true
        default: 'false'
        type: boolean
      approve_submission:
        description: 'ðŸ›‘ Approve Submission to Store?'
        required: true
        default: 'false'
        type: boolean
      submit_to_play_store:
        description: 'âœ… Submit to Google Play?'
        required: true
        default: 'false'
        type: boolean

jobs:
  qa-build:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.run_qa_build == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Set Expo Token
        run: echo "EXPO_TOKEN=${{ secrets.EXPO_TOKEN }}" >> $GITHUB_ENV

      - name: Build Android APK (QA Preview)
        run: eas build --platform android --profile preview --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build iOS IPA (QA Preview)
        run: eas build --platform ios --profile preview --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        continue-on-error: true

  production-build:
    runs-on: ubuntu-latest
    needs: qa-build
    if: ${{ github.event.inputs.approve_production_build == 'true' && github.event.inputs.run_production_build == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Set Expo Token
        run: echo "EXPO_TOKEN=${{ secrets.EXPO_TOKEN }}" >> $GITHUB_ENV

      - name: Build Android AAB (Production)
        run: eas build --platform android --profile production --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build iOS IPA (Production)
        run: eas build --platform ios --profile production --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        continue-on-error: true

  submit:
    runs-on: ubuntu-latest
    needs: production-build
    if: ${{ github.event.inputs.approve_submission == 'true' && github.event.inputs.submit_to_play_store == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Submit Android AAB to Google Play
        run: eas submit --platform android --profile production --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Submit iOS IPA to App Store
        run: eas submit --platform ios --profile production --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        continue-on-error: true

  dependabot:
    runs-on: ubuntu-latest
    needs: [production-build, submit]
    if: ${{ github.event.inputs.submit_to_play_store == 'true' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Simulate Dependabot
        run: echo "Dependabot triggered (manual automation entry point)."
